# -*- coding: utf-8 -*-
"""
Created on Thu Jul 16 14:13:25 2015

@author: Antoine
"""


import os
import pkg_resources


from ipp_macro_series_parser.config import Config


parser = Config(
    config_files_directory = os.path.join(pkg_resources.get_distribution('ipp-macro-series-parser').location)
    )
excel_output_directory = parser.get('data', 'excel_output_directory')


def reshape_to_long_for_output(df):
    """
    Unmelts the data, using the years as variables (columns).

    Parameters
    ----------
    df : DataFrame
        DataFrame generated by cn_df_generator(year) and/or look_many(df, my_selection)

    Example
    --------
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_main import cn_df_generator
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_extract_data import look_many
    >>> table2013 = cn_df_generator(2013)
    >>> my_selection = [{'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIB'},
    ...             {'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIN'}]
    >>> df = look_many(table2013, my_selection)
    >>> df_reshaped = reshape_to_long_for_output(df)

    Returns a slice of cn_df_generator(2013) containing the gross product (PIB) and the net product (PIN) of the whole
    economy (S1), for all years. Observations are indexed by code (PIB, PIN) and values are given per year.
    The dataframe is reshaped vertically, each row corresponding to a year, and each column to an observation
    (PIB or PIN)
    """
    del df['file_name']
    del df['link']
    del df['source']
    del df['version']
    del df['description']

    df = df.set_index(['year', 'code', 'ressources', 'institution', 'file_title'])
    df = df.unstack(level = 'year')

    df = df.transpose()
    df = df.reset_index(1)
    df.reset_index(drop = True)

    return df


def reshape_to_wide_for_output(df):
    """
    Unmelts the data, using the years as variables (rows).

    Parameters
    ----------
    df : DataFrame
        DataFrame generated by cn_df_generator(year) and/or look_many(df, my_selection

    Example
    --------
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_main import cn_df_generator
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_extract_data import look_many
    >>> table2013 = cn_df_generator(2013)
    >>> my_selection = [{'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIB'},
    ...             {'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIN'}]
    >>> df = look_many(table2013, my_selection)
    >>> df_reshaped = reshape_to_wide_for_output(df)

    Returns a slice of cn_df_generator(2013) containing the gross product (PIB) and the net product (PIN) of the whole
    economy (S1), for all years. Observations are indexed by code (PIB, PIN) and values are given per year.
    The dataframe is reshaped horizontally, each column corresponding to a year, and each row to an observation
    (PIB or PIN)
    """
    del df['file_name']
    del df['link']
    del df['source']
    del df['version']
    del df['description']

    df = df.set_index(['code', 'ressources', 'institution', 'file_title', 'year'])
    df = df.unstack(level = 'year')

    levels = df.columns.levels
    labels = df.columns.labels
    df.columns = levels[1][labels[1]]

    return df


def df_long_to_csv(df, csv_file_name):
    """
    Output the dataframe to a csv file (tab separated).

    Parameters
    ----------
    df : DataFrame
        DataFrame generated by reshape_to_long_for_output(df)
    csv_file_name : path to the output csv file
        path

    Example
    --------
    >>> from ipp_macro_series_parser.config import Config
    >>> config_files_directory = os.path.join(pkg_resources.get_distribution('ipp-macro-series-parser').location)
    ... )
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_main import cn_df_generator
    >>> from ipp_macro_series_parser.comptes_nationaux.cn_extract_data import look_many
    >>> cn_directory = parser.get('data', 'cn_directory')
    >>> table2013 = cn_df_generator(2013)
    >>> my_selection = [{'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIB'},
    ...             {'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIN'}]
    >>> df = look_many(table2013, my_selection)
    >>> df_reshaped = reshape_to_long_for_output(df)
    >>> df_long_to_csv(df_reshaped, os.path.join(cn_directory, 'output', '2013.csv'))

    Returns None. Creates a csv file containing the gross product (PIB) and the net product (PIN) of the whole
    economy (S1), for all years. Observations are indexed by code (PIB, PIN) and values are given per year.
    The dataframe is shaped vertically, each row corresponding to a year, and each column to an observation
    (PIB or PIN)
    """
    df.to_csv(os.path.join(excel_output_directory, csv_file_name), tupleize_cols = False, index = None, na_rep = 'NaN',
              sep='\t')
