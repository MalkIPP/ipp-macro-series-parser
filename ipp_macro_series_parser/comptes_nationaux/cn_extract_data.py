# -*- coding: utf-8 -*-
"""
Created on Wed Jul 22 18:00:33 2015

@author: sophie.cottet
"""

import pandas


def look_up(df, entry_by_index):
    """
    Get the data corresponding to the parameters (code, institution, ressources, year, description) defined in the
    dictionnary "entry_by_index", from the DataFrame df containing the stacked Comptabilité Nationale data.

    Parameters
    ----------
    df : DataFrame
        DataFrame generated by cn_df_generator(year)
    entry_by_index : dictionnary
        A dictionnary with keys 'code', 'institution', 'ressources', 'year', 'description'.

    Example
    --------
    >>> table2013 = cn_df_generator(2013)
    >>> dico = {'code': 'B1g/PIB', 'institution': 'S1', 'ressources': False, 'year': None, 'description': 'PIB'}
    >>> df0 = look_up(table2013, dico)

    Returns a slice of cn_df_generator(2013) containing only the gross product (PIB) of the whole economy (S1),
    for all years.
    """
    for key, value in entry_by_index.items():
        if value is None:
            continue
        if key != 'description':
            df = df[df[key] == value]
        if key == 'description':
            df = df[df[key].str.contains(value) == True]
    return df


def look_many(df, entry_by_index_list):
    """
    Get the multiple data corresponding to the parameters (the tuples (code, institution, ressources, year,
    description)) defined in the list of dictionnaries "entry_by_index_list", from the DataFrame df containing the
    stacked Comptabilité Nationale data.

    Parameters
    ----------
    df : DataFrame
        DataFrame generated by cn_df_generator(year)
    entry_by_index_list : list of dictionnaries
        Dictionnaries should have keys 'code', 'institution', 'ressources', 'year', 'description', but not necesarily
        all of them.

    Example
    --------
    >>> table2013 = cn_df_generator(2013)
    >>> my_list = [{'code': 'B1g/PIB', 'institution': 'S1', 'ressources': False},
        ...         {'code': 'B1n/PIN', 'institution': 'S1', 'ressources': False}]
    >>> df1 = look_many(table2013, my_list)

    Returns a slice of cn_df_generator(2013) containing the gross product (PIB) and the net product (PIN) of the whole
    economy (S1), for all years.

    >>> my_list_2 = [{'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIB'},
    ...             {'code': None, 'institution': 'S1', 'ressources': False,
    ...             'description': 'PIN'}]
    >>> df2 = look_many(table2013, my_list_2)

    Returns the same output, using a keyword from the description.
    """
    df_output = pandas.DataFrame()
    for entity in entry_by_index_list:
        df_inter = look_up(df, entity)
        df_output = pandas.concat([df_output, df_inter], axis = 0, ignore_index=False, verify_integrity=False)
    return df_output
